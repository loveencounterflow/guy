{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/props.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nprops                     = @\nno_such_value             = Symbol 'no_such_value'\nH                         = require './_helpers'\nbuiltins                  = require './_builtins'\nGUY_props                 = @\n@_misfit                  = Symbol 'misfit'\n@_misfit2                 = Symbol 'misfit2'\n{ rpr, }                  = require './trm'\n\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_keys_cfg', tests:\n  \"@isa.object x\":                                                    ( x ) -> @isa.object x\n  \"@isa_optional.cardinal x.depth\":                                   ( x ) -> @isa_optional.cardinal x.depth\n  \"@isa.boolean x.allow_any\":                                         ( x ) -> @isa.boolean x.allow_any\n  \"@isa.boolean x.symbols\":                                           ( x ) -> @isa.boolean x.symbols\n  \"@isa.boolean x.hidden\":                                            ( x ) -> @isa.boolean x.hidden\n  \"@isa.boolean x.builtins\":                                          ( x ) -> @isa.boolean x.builtins\n  \"@isa.boolean x.builtins implies x.hidden\":                         ( x ) ->\n    return ( not x.builtins ) or ( x.hidden )\n#...........................................................................................................\nH.types.defaults.guy_props_keys_cfg =\n  allow_any:  true\n  symbols:    false\n  builtins:   false\n  hidden:     false\n  depth:      null\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_crossmerge_cfg', tests:\n  \"@isa.guy_props_keys_cfg x\":                                        ( x ) -> @isa.guy_props_keys_cfg x\n  \"x.keys?\":                                                          ( x ) -> x.keys?\n  \"x.values?\":                                                        ( x ) -> x.values?\n  \"x.fallback can be anything\":                                       ( x ) -> true\n#...........................................................................................................\n### TAINT code duplication ###\nH.types.defaults.guy_props_crossmerge_cfg =\n  allow_any:  true\n  symbols:    false\n  builtins:   false\n  hidden:     false\n  depth:      null\n  keys:       null\n  values:     null\n  fallback:   @_misfit\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_tree_cfg', tests:\n  \"@isa.guy_props_keys_cfg x\":                  ( x ) -> @isa.guy_props_keys_cfg x\n  \"@isa_optional.function x.evaluate\":          ( x ) -> @isa_optional.function x.evaluate\n#...........................................................................................................\n### TAINT code duplication ###\nH.types.defaults.guy_props_tree_cfg =\n  allow_any:    true\n  symbols:      false\n  builtins:     false\n  hidden:       false\n  depth:        null\n  evaluate:     null\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_strict_owner_cfg', tests:\n  \"@isa.object x\":                                                    ( x ) -> @isa.object x\n  \"x.target?\":                                                        ( x ) -> x.target?\n  \"@isa.boolean x.reset\":                                             ( x ) -> @isa.boolean x.reset\n#...........................................................................................................\nH.types.defaults.guy_props_strict_owner_cfg =\n  target:     null\n  reset:      true\n\n\n#-----------------------------------------------------------------------------------------------------------\n@def  = def   = Object.defineProperty\n@hide = hide  = ( object, name, value ) => Object.defineProperty object, name, { enumerable: false, value, }\n\n#-----------------------------------------------------------------------------------------------------------\n@def_oneoff = def_oneoff = ( object, name, cfg, method ) =>\n  get = ->\n    R = method.apply object\n    delete cfg.get\n    def object, name,\n      configurable: ( cfg.configurable  ? true )\n      enumerable:   ( cfg.enumerable    ? true )\n      value:        R\n    return R\n  def object, name, { enumerable: true, configurable: true, get, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_pick_with_fallback = ( d, fallback, keys... ) ->\n  R     = {}\n  keys  = keys.flat Infinity\n  for key in keys\n    R[ key ] = if ( value = d[ key ] ) is undefined then fallback else value\n  return [ R, keys, ]\n\n#-----------------------------------------------------------------------------------------------------------\n@pick_with_fallback = ( d, fallback, keys... ) -> ( @_pick_with_fallback d, fallback, keys )[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@pluck_with_fallback = ( d, fallback, keys... ) ->\n  [ R, keys, ] = @_pick_with_fallback d, fallback, keys...\n  delete d[ key ] for key in keys\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@nullify_undefined = ( d ) ->\n  R       = {}\n  R[ k ]  = ( v ? null ) for k, v of d\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@omit_nullish = ( d ) ->\n  R       = {}\n  R[ k ]  = v for k, v of d when v?\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@crossmerge = ( cfg ) ->\n  H.types.validate.guy_props_crossmerge_cfg ( cfg = { H.types.defaults.guy_props_crossmerge_cfg..., cfg..., } )\n  R       = {}\n  for key from @_walk_keys cfg.keys, cfg\n    if ( value = @get cfg.values, key, @_misfit2 ) isnt @_misfit2\n      R[ key ] = value\n      continue\n    if cfg.fallback is @_misfit\n      throw new Error \"^guy.props.crossmerge@1^ missing key #{H.rpr key} in values\"\n    R[ key ] = cfg.fallback\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Strict_owner\n\n  #---------------------------------------------------------------------------------------------------------\n  @_get_strict_owner_handlers: ( instance ) ->\n    classname = instance.constructor.name\n    #.........................................................................................................\n    get = ( target, key ) =>\n      return undefined if key is Symbol.toStringTag\n      if ( value = props.get target, key, no_such_value ) is no_such_value\n        throw new Error \"^guy.props.Strict_owner@1^ #{classname} instance does not have property #{H.rpr key}\"\n      return value\n    #.........................................................................................................\n    set = ( target, key, value ) =>\n      if GUY_props.has target, key\n        throw new Error \"^guy.props.Strict_owner@1^ #{classname} instance already has property #{H.rpr key}\"\n      return Reflect.set target, key, value\n    #.........................................................................................................\n    return { get, set, }\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### thx to https://stackoverflow.com/a/40714458/7568091 ###\n    cfg = { target: @, cfg..., }\n    H.types.validate.guy_props_strict_owner_cfg cfg = { H.types.defaults.guy_props_strict_owner_cfg..., cfg..., }\n    { get, set, } = @constructor._get_strict_owner_handlers @\n    #.......................................................................................................\n    if cfg.reset  then  R = new Proxy cfg.target, { get,      }\n    else                R = new Proxy cfg.target, { get, set, }\n    #.......................................................................................................\n    return R\n\n\n#===========================================================================================================\n# KEY TESTING, RETRIEVAL, CATALOGUING\n#-----------------------------------------------------------------------------------------------------------\n@has = ( target, key ) =>\n  ### safe version of `Reflect.has()` that never throws an error ###\n  try return Reflect.has target, key catch error then return false\n\n#-----------------------------------------------------------------------------------------------------------\n@get = ( target, key, fallback = @_misfit ) =>\n  return target[ key ] if @has target, key\n  return fallback unless fallback is @_misfit\n  throw new Error \"^guy.props.get@1^ no such property #{H.rpr key}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@_get_keys_cfg = ( cfg ) ->\n  has_hidden  = ( cfg ? {} ).hidden?\n  cfg         = { H.types.defaults.guy_props_keys_cfg..., cfg..., }\n  cfg.hidden  = true if not has_hidden and cfg.builtins\n  H.types.validate.guy_props_keys_cfg cfg\n  return cfg\n\n#-----------------------------------------------------------------------------------------------------------\n@keys = ( owner, cfg ) -> [ ( @_walk_keys owner, ( @_get_keys_cfg cfg ) )..., ]\n\n#-----------------------------------------------------------------------------------------------------------\n@has_keys = ( owner, cfg ) ->\n  return true for key from @_walk_keys owner, ( @_get_keys_cfg cfg )\n  return false\n\n#-----------------------------------------------------------------------------------------------------------\n@walk_keys = ( owner, cfg ) ->\n  return @_walk_keys owner, ( @_get_keys_cfg cfg )\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_keys = ( owner, cfg ) ->\n  seen = new Set()\n  for { key, } from @_walk_keyowners owner, cfg, 0\n    continue if seen.has key\n    seen.add key\n    yield key\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_keyowners = ( owner, cfg, depth ) ->\n  # urge '^3354^', owner\n  return null if cfg.depth? and depth > cfg.depth\n  return null if ( not cfg.builtins ) and builtins.has owner\n  try\n    for key in Reflect.ownKeys owner\n      continue if ( not cfg.symbols ) and ( H.types.isa.symbol key )\n      d = Object.getOwnPropertyDescriptor owner, key\n      continue if ( not cfg.hidden ) and ( not d.enumerable )\n      yield { key, owner, }\n  catch error\n    return null if cfg.allow_any and ( error.message is 'Reflect.ownKeys called on non-object' )\n    throw error\n  #.........................................................................................................\n  if ( proto_owner = Object.getPrototypeOf owner )?\n    yield from @_walk_keyowners proto_owner, cfg, depth + 1\n  return null\n\n\n#===========================================================================================================\n# TREE\n#-----------------------------------------------------------------------------------------------------------\n@tree = ( owner, cfg ) ->\n  H.types.validate.guy_props_tree_cfg ( cfg = { H.types.defaults.guy_props_tree_cfg..., cfg..., } )\n  return [ ( @_walk_tree owner, cfg )..., ]\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_tree = ( owner, cfg ) ->\n  for { key, owner: subowner, } from @_walk_keyowners owner, cfg\n    value = subowner[ key ]\n    verdict = if cfg.evaluate? then ( cfg.evaluate { owner: subowner, key, value, } ) else 'take,descend'\n    ### TAINT use property descriptor? might have to use descriptor.get() anyway so no advantage ###\n    # if ( Object.getOwnPropertyDescriptor subowner, key ).value\n    yield [ key ] if /\\btake\\b/.test verdict\n    continue unless /\\bdescend\\b/.test verdict\n    # console.log '^345^', rpr { key, value, has_keys: ( @has_keys value, cfg ), }\n    for subkey from @_walk_tree value, cfg\n      yield [ key, subkey, ].flat()\n  return null\n\n\n\n\n"
  ]
}