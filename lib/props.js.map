{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/props.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nGUY_props                 = @\nno_such_value             = Symbol 'no_such_value'\nH                         = require './_helpers'\nbuiltins                  = require './_builtins'\n@_misfit                  = Symbol 'misfit'\n@_misfit2                 = Symbol 'misfit2'\n{ rpr, }                  = require './trm'\n### see https://nodejs.org/dist/latest-v18.x/docs/api/util.html#utilinspectcustom ###\nnode_inspect              = Symbol.for 'nodejs.util.inspect.custom'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_keys_cfg', tests:\n  \"@isa.object x\":                                                    ( x ) -> @isa.object x\n  \"@isa_optional.cardinal x.depth\":                                   ( x ) -> @isa_optional.cardinal x.depth\n  \"@isa.boolean x.allow_any\":                                         ( x ) -> @isa.boolean x.allow_any\n  \"@isa.boolean x.symbols\":                                           ( x ) -> @isa.boolean x.symbols\n  \"@isa.boolean x.hidden\":                                            ( x ) -> @isa.boolean x.hidden\n  \"@isa.boolean x.builtins\":                                          ( x ) -> @isa.boolean x.builtins\n  \"@isa.boolean x.builtins implies x.hidden\":                         ( x ) ->\n    return ( not x.builtins ) or ( x.hidden )\n#...........................................................................................................\nH.types.defaults.guy_props_keys_cfg =\n  allow_any:  true\n  symbols:    false\n  builtins:   false\n  hidden:     false\n  depth:      null\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_crossmerge_cfg', tests:\n  \"@isa.guy_props_keys_cfg x\":                                        ( x ) -> @isa.guy_props_keys_cfg x\n  \"x.keys?\":                                                          ( x ) -> x.keys?\n  \"x.values?\":                                                        ( x ) -> x.values?\n  \"x.fallback can be anything\":                                       ( x ) -> true\n#...........................................................................................................\n### TAINT code duplication ###\nH.types.defaults.guy_props_crossmerge_cfg =\n  allow_any:  true\n  symbols:    false\n  builtins:   false\n  hidden:     false\n  depth:      null\n  keys:       null\n  values:     null\n  fallback:   @_misfit\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_tree_cfg', tests:\n  \"@isa.guy_props_keys_cfg x\":                  ( x ) -> @isa.guy_props_keys_cfg x\n  \"@isa_optional.function x.evaluate\":          ( x ) -> @isa_optional.function x.evaluate\n  \"@isa_optional.text x.sep\":                   ( x ) -> @isa_optional.text x.sep\n#...........................................................................................................\n### TAINT code duplication ###\nH.types.defaults.guy_props_tree_cfg =\n  allow_any:    true\n  symbols:      false\n  builtins:     false\n  hidden:       false\n  depth:        null\n  evaluate:     null\n  sep:          null\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_tree_verdict', ( x ) ->\n  return true if @isa.boolean x\n  return false unless @isa.text x\n  return true\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_strict_owner', ( x ) -> x instanceof Strict_owner\n\n#-----------------------------------------------------------------------------------------------------------\nH.types.declare 'guy_props_strict_owner_cfg', tests:\n  \"@isa.object x\":                                                    ( x ) -> @isa.object x\n  \"x.target?\":                                                        ( x ) -> x.target?\n  \"@isa.boolean x.locked\":                                            ( x ) -> @isa.boolean x.locked\n  \"@isa.boolean x.seal\":                                              ( x ) -> @isa.boolean x.seal\n  \"@isa.boolean x.freeze\":                                            ( x ) -> @isa.boolean x.freeze\n  \"@isa.boolean x.oneshot\":                                           ( x ) -> @isa.boolean x.oneshot\n  \"@isa_optional.boolean x.reset\":                                    ( x ) -> @isa_optional.boolean x.reset\n  # \"reassignable object cannot be frozen\": ( x ) ->\n  #   return false if x.oneshot and x.freeze\n  #   return true\n  \"x.reset is deprecated\": ( x ) ->\n    return true if x.reset?\n    return true if x.reset is true\n    throw new Error \"^guy.props.Strict_owner@1^ `cfg.reset: false` is deprecated; use `cfg.seal: true` instead\"\n#...........................................................................................................\nH.types.defaults.guy_props_strict_owner_cfg =\n  target:     null\n  reset:      true\n  locked:     true\n  seal:       false\n  freeze:     false\n  oneshot:    false\n\n#-----------------------------------------------------------------------------------------------------------\n@def  = def   = Object.defineProperty\n@hide = hide  = ( object, name, value ) => Object.defineProperty object, name, { enumerable: false, value, }\n\n#-----------------------------------------------------------------------------------------------------------\n@def_oneoff = def_oneoff = ( object, name, cfg, method ) =>\n  get = ->\n    R = method.apply object\n    delete cfg.get\n    def object, name,\n      configurable: ( cfg.configurable  ? true )\n      enumerable:   ( cfg.enumerable    ? true )\n      value:        R\n    return R\n  def object, name, { enumerable: true, configurable: true, get, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_pick_with_fallback = ( d, fallback, keys... ) ->\n  R     = {}\n  keys  = keys.flat Infinity\n  for key in keys\n    R[ key ] = if ( value = d[ key ] ) is undefined then fallback else value\n  return [ R, keys, ]\n\n#-----------------------------------------------------------------------------------------------------------\n@pick_with_fallback = ( d, fallback, keys... ) -> ( @_pick_with_fallback d, fallback, keys )[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@pluck_with_fallback = ( d, fallback, keys... ) ->\n  [ R, keys, ] = @_pick_with_fallback d, fallback, keys...\n  delete d[ key ] for key in keys\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@nullify_undefined = ( d ) ->\n  R       = {}\n  R[ k ]  = ( v ? null ) for k, v of d\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@omit_nullish = ( d ) ->\n  R       = {}\n  R[ k ]  = v for k, v of d when v?\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@crossmerge = ( cfg ) ->\n  H.types.validate.guy_props_crossmerge_cfg ( cfg = { H.types.defaults.guy_props_crossmerge_cfg..., cfg..., } )\n  R       = {}\n  for key from @_walk_keys cfg.keys, cfg\n    if ( value = @get cfg.values, key, @_misfit2 ) isnt @_misfit2\n      R[ key ] = value\n      continue\n    if cfg.fallback is @_misfit\n      throw new Error \"^guy.props.crossmerge@1^ missing key #{H.rpr key} in values\"\n    R[ key ] = cfg.fallback\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@resolve_property_chain = ( owner, property_chain ) ->\n  R = owner\n  R = R[ term ] for term in property_chain\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Strict_owner\n\n  #---------------------------------------------------------------------------------------------------------\n  Strict_owner_cfg = Symbol 'Strict_owner_cfg'\n\n  #---------------------------------------------------------------------------------------------------------\n  @_get_proxy_cfg: ( instance, cfg ) ->\n    R =\n      #.....................................................................................................\n      ownKeys: ( target ) -> Reflect.ownKeys target\n      #.....................................................................................................\n      get: ( target, key ) ->\n        return \"#{instance.constructor.name}\" if key is Symbol.toStringTag\n        return target.constructor             if key is 'constructor'\n        return target.toString                if key is 'toString'\n        return target.call                    if key is 'call'\n        return target.apply                   if key is 'apply'\n        return target[ Symbol.iterator  ]     if key is Symbol.iterator\n        return target[ node_inspect     ]     if key is node_inspect\n        ### NOTE necessitated by behavior of `node:util.inspect()`: ###\n        return target[ 0                ]     if key is '0'\n        if ( value = GUY_props.get target, key, no_such_value ) is no_such_value\n          return undefined unless cfg.locked\n          throw new Error \"^guy.props.Strict_owner@1^ #{instance.constructor.name} instance does not have property #{H.rpr key}\"\n        return value\n      #.....................................................................................................\n      set: ( target, key, value ) ->\n        if GUY_props.has target, key\n          throw new Error \"^guy.props.Strict_owner@1^ #{instance.constructor.name} instance already has property #{H.rpr key}\"\n        return Reflect.set target, key, value\n    #.......................................................................................................\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  @get_locked: ( self ) ->\n    return self[ Strict_owner_cfg ].locked\n\n  #---------------------------------------------------------------------------------------------------------\n  @set_locked: ( self, flag ) ->\n    H.types.validate.boolean flag\n    self[ Strict_owner_cfg ].locked = flag\n    return flag\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### thx to https://stackoverflow.com/a/40714458/7568091 ###\n    cfg = { target: @, cfg..., }\n    H.types.validate.guy_props_strict_owner_cfg cfg = { H.types.defaults.guy_props_strict_owner_cfg..., cfg..., }\n    proxy_cfg                 = @constructor._get_proxy_cfg @, cfg\n    delete proxy_cfg.set unless cfg.oneshot\n    R                         = new Proxy cfg.target, proxy_cfg\n    GUY_props.hide R, Strict_owner_cfg, cfg\n    Object.freeze R if cfg.freeze\n    Object.seal   R if cfg.seal\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  @create: ( cfg ) ->\n    cfg = { target: {}, cfg..., }\n    H.types.validate.guy_props_strict_owner_cfg cfg = { H.types.defaults.guy_props_strict_owner_cfg..., cfg..., }\n    proxy_cfg = @_get_proxy_cfg cfg.target, cfg\n    delete proxy_cfg.set unless cfg.oneshot\n    R         = new Proxy cfg.target, proxy_cfg\n    GUY_props.hide R, Strict_owner_cfg, cfg\n    ### TAINT consider to freeze, seal target instread of proxy ###\n    Object.freeze R if cfg.freeze\n    Object.seal   R if cfg.seal\n    return R\n\n#-----------------------------------------------------------------------------------------------------------\nStrict_owner = @Strict_owner\n\n\n#===========================================================================================================\n# KEY TESTING, RETRIEVAL, CATALOGUING\n#-----------------------------------------------------------------------------------------------------------\n@has = ( target, key ) =>\n  ### safe version of `Reflect.has()` that never throws an error ###\n  ### try to use `Reflect.has()` on given target; will fail for `null`, `undefined`, primitive values: ###\n  try return Reflect.has target, key catch error then null\n  ### try to retrieve prototype of target; will fail for `null`, `undefined`: ###\n  try return false unless ( prototype = Object.getPrototypeOf target )? catch error then null\n  ### give up if no prototye has been returned (may happen e.g. with `target = Object.create null`): ###\n  return false unless prototype?\n  ### apply `Reflect.has()` to prototype of target; this should be the definitive answer: ###\n  return Reflect.has prototype, key\n\n#-----------------------------------------------------------------------------------------------------------\nget = ( target, key, fallback ) ->\n  switch arity = arguments.length\n    when 2 then fallback = @_misfit\n    when 3 then null\n    else throw new Error \"^guy.props.get@1^ expected 2 or 3 arguments, got #{arity}\"\n  return target[ key ] if @has target, key\n  return fallback unless fallback is @_misfit\n  throw new Error \"^guy.props.get@1^ no such property #{H.rpr key}\"\n@get = get.bind @ ### avoiding fat-arrow function so we can use `arguments` ###\n\n#-----------------------------------------------------------------------------------------------------------\n@_get_keys_cfg = ( cfg ) ->\n  has_hidden  = ( cfg ? {} ).hidden?\n  cfg         = { H.types.defaults.guy_props_keys_cfg..., cfg..., }\n  cfg.hidden  = true if not has_hidden and cfg.builtins\n  H.types.validate.guy_props_keys_cfg cfg\n  return cfg\n\n#-----------------------------------------------------------------------------------------------------------\n@keys = ( owner, cfg ) => [ ( @_walk_keys owner, ( @_get_keys_cfg cfg ) )..., ]\n\n#-----------------------------------------------------------------------------------------------------------\n@has_any_keys = ( owner, cfg ) =>\n  return true for key from @_walk_keys owner, ( @_get_keys_cfg cfg )\n  return false\n\n#-----------------------------------------------------------------------------------------------------------\n@walk_keys = ( owner, cfg ) =>\n  return @_walk_keys owner, ( @_get_keys_cfg cfg )\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_keys = ( owner, cfg ) ->\n  seen = new Set()\n  for { key, } from @_walk_keyowners owner, cfg\n    continue if seen.has key\n    seen.add key\n    yield key\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_keyowners = ( owner, cfg, current_depth = 0 ) ->\n  # urge '^3354^', owner\n  return null if cfg.depth? and current_depth > cfg.depth\n  return null if ( not cfg.builtins ) and builtins.has owner\n  try\n    for key in Reflect.ownKeys owner\n      continue if ( not cfg.symbols ) and ( H.types.isa.symbol key )\n      d = Object.getOwnPropertyDescriptor owner, key\n      continue if ( not cfg.hidden ) and ( not d.enumerable )\n      yield { key, owner, }\n  catch error\n    return null if cfg.allow_any and ( error.message is 'Reflect.ownKeys called on non-object' )\n    throw new Error \"^guy.props._walk_keyowners@1^ Reflect.ownKeys called on non-object #{rpr owner}\"\n  #.........................................................................................................\n  if ( proto_owner = Object.getPrototypeOf owner )?\n    yield from @_walk_keyowners proto_owner, cfg, current_depth + 1\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@xray = ( owner, base = {} ) =>\n  base[ k ] = owner[ k ] for k from @_walk_keys owner, { hidden: true, symbols: true, builtins: false, }\n  return base\n\n\n#===========================================================================================================\n# TREE\n#-----------------------------------------------------------------------------------------------------------\n@tree = ( owner, cfg ) -> [ ( @walk_tree owner, cfg )..., ]\n\n#-----------------------------------------------------------------------------------------------------------\n@walk_tree = ( owner, cfg ) ->\n  H.types.validate.guy_props_tree_cfg ( cfg = { H.types.defaults.guy_props_tree_cfg..., cfg..., } )\n  unless cfg.sep? then return yield from @_walk_tree owner, cfg\n  yield ( x.toString() for x in p ).join cfg.sep for p from @_walk_tree owner, cfg\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_walk_tree = ( owner, cfg, seen ) ->\n  seen ?= new Map()\n  for { key, owner: subowner, } from @_walk_keyowners owner, cfg\n    seen.set subowner, new Set() unless seen.has subowner\n    continue if ( seen_keys = seen.get subowner ).has key\n    seen_keys.add key\n    try\n      value = subowner[ key ]\n    catch error\n      continue if cfg.allow_any and (\n        /'caller', 'callee', and 'arguments' properties may not be accessed/.test error.message)\n    verdict = if cfg.evaluate? then ( cfg.evaluate { owner: subowner, key, value, } ) else 'take,descend'\n    H.types.validate.guy_props_tree_verdict verdict\n    continue if verdict is false\n    verdict = 'take,descend' if verdict is true\n    yield [ key ] if /\\btake\\b/.test verdict\n    continue unless /\\bdescend\\b/.test verdict\n    for subkey from @_walk_tree value, cfg, seen\n      yield [ key, subkey, ].flat()\n  return null\n\n\n\n\n"
  ]
}