{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/str.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA,aAAA;;;;EAOA,IAAC,CAAA,gBAAD,GAAoB,QAAA,CAAE,IAAF,CAAA;WAAY,IAAI,CAAC,OAAL,CAAa,qBAAb,EAAoC,MAApC;EAAZ,EAPpB;;;;;EAaA,IAAC,CAAA,GAAD,GAAO,QAAA,CAAE,KAAF,EAAA,GAAS,WAAT,CAAA;AACP,QAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,GAAA,EAAA;IAAE,CAAA,GAAI,KAAK,CAAE,CAAF;IACT,KAAA,yDAAA;;MACE,CAAA,IAAK,UAAU,CAAC,QAAX,CAAA,CAAA,GAAwB,KAAK,CAAE,GAAA,GAAM,CAAR;IADpC;AAEA,WAAO;EAJF;AAbP",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n### thx to https://stackoverflow.com/a/6969486/7568091 and\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping ###\n@escape_for_regex = ( text ) -> text.replace /[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@SQL = ( parts, expressions... ) ->\n  R = parts[ 0 ]\n  for expression, idx in expressions\n    R += expression.toString() + parts[ idx + 1 ]\n  return R\n\n\n\n\n\n\n\n\n"
  ]
}