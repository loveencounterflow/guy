{
  "version": 3,
  "file": "tests.js",
  "sourceRoot": "..",
  "sources": [
    "src/tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n{ step, }                 = require 'coffeenode-suspend'\ntest                      = require 'guy-test'\nGUY                       = require './main'\n\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\n@_prune = ->\n  for name, value of @\n    continue if name.startsWith '_'\n    delete @[ name ] unless name in include\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_main = ( handler = null ) ->\n  test @, 'timeout': 30000\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"demo\" ] = ( T, done ) ->\n  step ( resume ) ->\n    yield GUY.f resume\n    done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"find maximum semvers\" ] = ( T, done ) ->\n  SEMVER = require 'semver'\n  probes = CND.shuffle [\n    'modified', 'created',\n    '0.1.1', '0.1.2', '0.1.3', '0.1.9',\n    '1.0.1', '1.0.2', '1.0.3', '1.0.8', '1.0.9',\n    '2.0.2',\n    '4.1.5', '4.1.6', ]\n  #.........................................................................................................\n  max_all_semver  = null\n  max_v0_semver   = null\n  # v0_matcher      = '^0.x' # OK but not so clear; see https://github.com/npm/node-semver#caret-ranges-123-025-004\n  v0_matcher      = '>=0.0.0 <1.0.0'\n  is_semver       = ( x ) -> ( SEMVER.valid x )?\n  is_v0           = ( semver ) -> SEMVER.satisfies semver, v0_matcher\n  for semver in probes\n    continue unless is_semver semver\n    if max_all_semver? then max_all_semver = semver if SEMVER.gt semver, max_all_semver\n    else                    max_all_semver = semver\n    if is_v0 semver\n      if max_v0_semver? then  max_v0_semver = semver if SEMVER.gt semver, max_v0_semver\n      else                    max_v0_semver = semver\n    debug '34221', semver, max_v0_semver, max_all_semver, ( CND.truth SEMVER.satisfies semver, v0_matcher )\n  debug '34221', max_v0_semver, max_all_semver\n  T.eq max_v0_semver,   '0.1.9'\n  T.eq max_all_semver,  '4.1.6'\n  done()\n\n\n############################################################################################################\nunless module.parent?\n  include = [\n    \"demo\"\n    # \"find maximum semvers\"\n    ]\n  @_prune()\n  @_main()\n\n\n"
  ]
}