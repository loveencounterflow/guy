{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/_temporary_colors.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n### NOTE: this module is here to speed up deprecation of CND (up to v9); it will change in the future ###\n\n############################################################################################################\nH                         = require './_helpers'\nL = @\n\n\n#-----------------------------------------------------------------------------------------------------------\n# Effects On\n#...........................................................................................................\n@blink                    = \"\\x1b[5m\"\n@bold                     = \"\\x1b[1m\"\n@reverse                  = \"\\x1b[7m\"\n@underline                = \"\\x1b[4m\"\n\n#-----------------------------------------------------------------------------------------------------------\n# Effects Off\n#...........................................................................................................\n@no_blink                 = \"\\x1b[25m\"\n@no_bold                  = \"\\x1b[22m\"\n@no_reverse               = \"\\x1b[27m\"\n@no_underline             = \"\\x1b[24m\"\n@reset                    = \"\\x1b[0m\"\n\n#-----------------------------------------------------------------------------------------------------------\n# Colors\n#...........................................................................................................\n@colors =\n  black:                    \"\\x1b[38;05;16m\"\n  blue:                     \"\\x1b[38;05;27m\"\n  green:                    \"\\x1b[38;05;34m\"\n  cyan:                     \"\\x1b[38;05;51m\"\n  sepia:                    \"\\x1b[38;05;52m\"\n  indigo:                   \"\\x1b[38;05;54m\"\n  steel:                    \"\\x1b[38;05;67m\"\n  brown:                    \"\\x1b[38;05;94m\"\n  olive:                    \"\\x1b[38;05;100m\"\n  lime:                     \"\\x1b[38;05;118m\"\n  red:                      \"\\x1b[38;05;124m\"\n  crimson:                  \"\\x1b[38;05;161m\"\n  plum:                     \"\\x1b[38;05;176m\"\n  pink:                     \"\\x1b[38;05;199m\"\n  orange:                   \"\\x1b[38;05;208m\"\n  gold:                     \"\\x1b[38;05;214m\"\n  tan:                      \"\\x1b[38;05;215m\"\n  yellow:                   \"\\x1b[38;05;226m\"\n  grey:                     \"\\x1b[38;05;240m\"\n  darkgrey:                 \"\\x1b[38;05;234m\"\n  white:                    \"\\x1b[38;05;255m\"\n\n  # experimental:\n  # colors as defined by http://ethanschoonover.com/solarized\n  BASE03:                   \"\\x1b[38;05;234m\"\n  BASE02:                   \"\\x1b[38;05;235m\"\n  BASE01:                   \"\\x1b[38;05;240m\"\n  BASE00:                   \"\\x1b[38;05;241m\"\n  BASE0:                    \"\\x1b[38;05;244m\"\n  BASE1:                    \"\\x1b[38;05;245m\"\n  BASE2:                    \"\\x1b[38;05;254m\"\n  BASE3:                    \"\\x1b[38;05;230m\"\n  YELLOW:                   \"\\x1b[38;05;136m\"\n  ORANGE:                   \"\\x1b[38;05;166m\"\n  RED:                      \"\\x1b[38;05;124m\"\n  MAGENTA:                  \"\\x1b[38;05;125m\"\n  VIOLET:                   \"\\x1b[38;05;61m\"\n  BLUE:                     \"\\x1b[38;05;33m\"\n  CYAN:                     \"\\x1b[38;05;37m\"\n  GREEN:                    \"\\x1b[38;05;64m\"\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n# Moves etc\n#...........................................................................................................\n@cr                       = \"\\x1b[1G\"       # Carriage Return; move to first column\n@clear_line_right         = \"\\x1b[0K\"       # Clear to end   of line\n@clear_line_left          = \"\\x1b[1K\"       # Clear to start of line\n@clear_line               = \"\\x1b[2K\"       # Clear all line content\n@clear_below              = \"\\x1b[0J\"       # Clear to the bottom\n@clear_above              = \"\\x1b[1J\"       # Clear to the top (including current line)\n@clear                    = \"\\x1b[2J\"       # Clear entire screen\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_temporary_compile_colors = ( target ) ->\n  effect_names =\n    blink:        1\n    bold:         1\n    reverse:      1\n    underline:    1\n  #.........................................................................................................\n  for effect_name of effect_names\n    effect_on       = L[         effect_name ]\n    effect_off      = L[ 'no_' + effect_name ]\n    do ( effect_name, effect_on, effect_off ) =>\n      target[ effect_name ] = ( P... ) =>\n        R         = [ effect_on, ]\n        last_idx  = P.length - 1\n        for p, idx in P\n          R.push if H.types.isa.text p then p else target.rpr p\n          if idx isnt last_idx\n            R.push effect_on\n            R.push ' ' # _cfg.separator\n        R.push effect_off\n        return R.join ''\n  #.........................................................................................................\n  for color_name, color_code of L.colors\n    do ( color_name, color_code ) =>\n      target[ color_name ] = ( P... ) =>\n        R         = [ color_code, ]\n        last_idx  = P.length - 1\n        for p, idx in P\n          R.push if H.types.isa.text p then p else target.rpr p\n          if idx isnt last_idx\n            R.push color_code\n            R.push ' ' # _cfg.separator\n        R.push L.reset\n        return R.join ''\n  #.........................................................................................................\n  return null\n\n\n"
  ]
}