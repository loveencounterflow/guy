{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  validate\n  type_of }               = types.export()\n{ lets\n  freeze }                = require 'letsfreezethat'\n{ def\n  hide\n  def_oneoff }            = require './props'\n\n\n#===========================================================================================================\nclass Guy\n\n  #---------------------------------------------------------------------------------------------------------\n  # constructor: ( target = null ) ->\n  constructor: ( @settings = null ) ->\n    @props = { def, hide, def_oneoff, }\n    #.......................................................................................................\n    # def_oneoff @, 'foo', { enumerable: true, }, -> require 'intertype'\n    # def_oneoff @, 'nowait',   { enumerable: true, }, -> require './nowait'\n    def_oneoff @, 'async',    { enumerable: true, }, -> require './async'\n    def_oneoff @, 'cfg',      { enumerable: true, }, -> require './cfg'\n    def_oneoff @, 'lft',      { enumerable: true, }, -> require 'letsfreezethat'\n    def_oneoff @, 'obj',      { enumerable: true, }, -> require './obj'\n    def_oneoff @, 'process',  { enumerable: true, }, -> require './process'\n    def_oneoff @, 'fs',       { enumerable: true, }, -> require './fs'\n    def_oneoff @, 'str',      { enumerable: true, }, -> require './str'\n    return undefined\n\n\n############################################################################################################\n# if require.main is module then do =>\nmodule.exports = new Guy()\n\n\n\n\n"
  ]
}