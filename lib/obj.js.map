{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/obj.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA,aAAA;;EAKA,IAAC,CAAA,mBAAD,GAAuB,QAAA,CAAE,CAAF,EAAK,QAAL,EAAA,GAAe,IAAf,CAAA;AACvB,QAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA;IAAE,CAAA,GAAQ,CAAA;IACR,IAAA,GAAQ,IAAI,CAAC,IAAL,CAAU,KAAV;IACR,KAAA,sCAAA;;MACE,CAAC,CAAE,GAAF,CAAD,GAAc,CAAE,KAAA,GAAQ,CAAC,CAAE,GAAF,CAAX,CAAA,KAAwB,MAA3B,GAA0C,QAA1C,GAAwD;IADrE;AAEA,WAAO,CAAE,CAAF,EAAK,IAAL;EALc,EALvB;;;EAaA,IAAC,CAAA,kBAAD,GAAsB,QAAA,CAAE,CAAF,EAAK,QAAL,EAAA,GAAe,IAAf,CAAA;WAA4B,CAAE,IAAC,CAAA,mBAAD,CAAqB,CAArB,EAAwB,QAAxB,EAAkC,IAAlC,CAAF,CAA0C,CAAE,CAAF;EAAtE,EAbtB;;;EAgBA,IAAC,CAAA,mBAAD,GAAuB,QAAA,CAAE,CAAF,EAAK,QAAL,EAAA,GAAe,IAAf,CAAA;AACvB,QAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA;IAAE,CAAE,CAAF,EAAK,IAAL,CAAA,GAAe,IAAC,CAAA,mBAAD,CAAqB,CAArB,EAAwB,QAAxB,EAAkC,GAAA,IAAlC;IACf,KAAA,sCAAA;;MAAA,OAAO,CAAC,CAAE,GAAF;IAAR;AACA,WAAO;EAHc,EAhBvB;;;EAsBA,IAAC,CAAA,iBAAD,GAAqB,QAAA,CAAE,CAAF,CAAA;AACrB,QAAA,CAAA,EAAA,CAAA,EAAA;IAAE,CAAA,GAAU,CAAA;IACV,KAAA,MAAA;;MAAA,CAAC,CAAE,CAAF,CAAD,eAAY,IAAI;IAAhB;AACA,WAAO;EAHY,EAtBrB;;;EA4BA,IAAC,CAAA,YAAD,GAAgB,QAAA,CAAE,CAAF,CAAA;AAChB,QAAA,CAAA,EAAA,CAAA,EAAA;IAAE,CAAA,GAAU,CAAA;IACV,KAAA,MAAA;;UAA+B;QAA/B,CAAC,CAAE,CAAF,CAAD,GAAU;;IAAV;AACA,WAAO;EAHO;AA5BhB",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_pick_with_fallback = ( d, fallback, keys... ) ->\n  R     = {}\n  keys  = keys.flat Infinity\n  for key in keys\n    R[ key ] = if ( value = d[ key ] ) is undefined then fallback else value\n  return [ R, keys, ]\n\n#-----------------------------------------------------------------------------------------------------------\n@pick_with_fallback = ( d, fallback, keys... ) -> ( @_pick_with_fallback d, fallback, keys )[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@pluck_with_fallback = ( d, fallback, keys... ) ->\n  [ R, keys, ] = @_pick_with_fallback d, fallback, keys...\n  delete d[ key ] for key in keys\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@nullify_undefined = ( d ) ->\n  R       = {}\n  R[ k ]  = ( v ? null ) for k, v of d\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@omit_nullish = ( d ) ->\n  R       = {}\n  R[ k ]  = v for k, v of d when v?\n  return R\n\n"
  ]
}