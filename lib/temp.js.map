{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/temp.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nH                         = require './_helpers'\ndebug                     = console.log\ndefaults                  = { keep: false, prefix: 'guy.temp-', suffix: '', }\n\n\n#-----------------------------------------------------------------------------------------------------------\n@with_file = ( cfg, handler ) ->\n  switch arity = arguments.length\n    when 1 then [ cfg, handler, ] = [ null, cfg, ]\n    when 2 then null\n    else throw new Error \"expected 1 or 2 arguments, got #{arity}\"\n  cfg   = { defaults..., cfg..., }\n  type  = Object::toString.call handler\n  return @_with_file_async cfg, handler if type is '[object AsyncFunction]'\n  return @_with_file_sync  cfg, handler if type is '[object Function]'\n  throw new Error \"^guy.async@45^ expected an (sync or async) function, got a #{type}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@with_directory = ( cfg, handler ) ->\n  switch arity = arguments.length\n    when 1 then [ cfg, handler, ] = [ null, cfg, ]\n    when 2 then null\n    else throw new Error \"expected 1 or 2 arguments, got #{arity}\"\n  cfg   = { defaults..., cfg..., }\n  type  = Object::toString.call handler\n  return @_with_directory_async cfg, handler if type is '[object AsyncFunction]'\n  return @_with_directory_sync  cfg, handler if type is '[object Function]'\n  throw new Error \"^guy.async@45^ expected an (sync or async) function, got a #{type}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@_with_file_sync = ( cfg, handler ) ->\n  TEMP          = require 'tmp'\n  { name: path\n    fd\n    removeCallback } = TEMP.fileSync cfg\n  try handler { path, fd, } finally\n    removeCallback() unless cfg.keep\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_with_directory_sync = ( cfg, handler ) ->\n  FS              = require 'node:fs'\n  TEMP            = require 'tmp'\n  { name: path, } = TEMP.dirSync cfg\n  try handler { path, } finally\n    FS.rmSync path, { recursive: true, } unless cfg.keep\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_with_file_async = ( cfg, handler ) ->\n  TEMP          = require 'tmp'\n  { name: path\n    fd\n    removeCallback } = TEMP.fileSync cfg\n  try await handler { path, fd, } finally\n    removeCallback() unless cfg.keep\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_with_directory_async = ( cfg, handler ) ->\n  switch arity = arguments.length\n    when 1 then [ cfg, handler, ] = [ null, cfg, ]\n    when 2 then null\n    else throw new Error \"expected 1 or 2 arguments, got #{arity}\"\n  cfg             = { defaults..., cfg..., }\n  FS              = require 'node:fs'\n  TEMP            = require 'tmp'\n  { name: path, } = TEMP.dirSync cfg\n  try await handler { path, } finally\n    FS.rmSync path, { recursive: true, } unless cfg.keep\n  return null\n\n"
  ]
}