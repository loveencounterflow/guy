{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/trm.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nH                         = require './_helpers'\nC                         = require './_temporary_colors'\nC._temoprary_compile_colors @\nσ_guy                     = Symbol 'GUY'\nglobalThis[ σ_guy ]      ?= {}\nglobalThis[ σ_guy ].t0   ?= Date.now()\n\n#-----------------------------------------------------------------------------------------------------------\n@rpr      = H.rpr\n@inspect  = H.inspect\n\n#-----------------------------------------------------------------------------------------------------------\n@get_writer = ( target, front = '', back = '\\n' ) -> ( P... ) =>\n  target.write front + ( @pen P... ) + back\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@pen = ( P... ) =>\n  ### Given any number of arguments, return a text representing the arguments as seen fit for output\n  commands like `log` and `echo`. ###\n  R = ( ( if H.types.isa.text p then p else @rpr p ) for p in P )\n  return R.join H._trm_cfg.separator\n\n#-----------------------------------------------------------------------------------------------------------\n@get_loggers = ( badge = null ) =>\n  prefix  = if badge? then ( ' ' + ( @grey badge ) +  ' ' ) else ''\n  R       =\n    alert:    ( P... ) => @log ( @grey get_timestamp() ) + ( @blink @RED ' ⚠ '  ) + prefix + ( @RED     P...  )\n    debug:    ( P... ) => @log ( @grey get_timestamp() ) + ( @grey ' ⚙ '        ) + prefix + ( @pink    P...  )\n    help:     ( P... ) => @log ( @grey get_timestamp() ) + ( @gold ' ☛ '        ) + prefix + ( @lime    P...  )\n    info:     ( P... ) => @log ( @grey get_timestamp() ) + ( @grey ' ▶ '        ) + prefix + ( @BLUE    P...  )\n    plain:    ( P... ) => @log ( @grey get_timestamp() ) + ( @grey ' ▶ '        ) + prefix + ( @pen P... )\n    praise:   ( P... ) => @log ( @grey get_timestamp() ) + ( @GREEN ' ✔ '       ) + prefix + ( @GREEN   P...  )\n    urge:     ( P... ) => @log ( @grey get_timestamp() ) + ( @bold @RED ' ? '   ) + prefix + ( @orange  P...  )\n    warn:     ( P... ) => @log ( @grey get_timestamp() ) + ( @bold @RED ' ! '   ) + prefix + ( @RED     P...  )\n    whisper:  ( P... ) => @log ( @grey get_timestamp() ) + ( @grey ' ▶ '        ) + prefix + ( @grey    P...  )\n  #.........................................................................................................\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nget_timestamp = =>\n  t1  = Math.floor ( Date.now() - globalThis[ σ_guy ].t0 ) / 1000\n  s   = t1 % 60\n  s   = '' + s\n  s   = '0' + s if s.length < 2\n  m   = ( Math.floor t1 / 60 ) % 100\n  m   = '' + m\n  m   = '0' + m if m.length < 2\n  return \"#{m}:#{s}\"\n\n\n#-----------------------------------------------------------------------------------------------------------\n@log                      = @get_writer process.stderr\n@echo                     = @get_writer process.stdout\n\n"
  ]
}