{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/watch.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nH                         = require './_helpers'\ndebug                     = console.log\n{ FSWatcher }             = require 'chokidar'\n{ rpr }                   = H\nFS                        = require 'fs'\n\n#-----------------------------------------------------------------------------------------------------------\npath_exists = ( path ) ->\n  H.types.validate.nonempty_text path\n  try FS.statSync path catch error\n    return false if error.code is 'ENOENT'\n    throw error\n  return true\n\n\n#===========================================================================================================\nclass @Watcher\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    @_watcher = new FSWatcher\n      recursive:        true\n      persistent:       true\n      awaitWriteFinish: { stabilityThreshold: 100, }\n    @_attach_handlers()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  stop: -> await @_watcher.close()\n\n  #---------------------------------------------------------------------------------------------------------\n  _attach_handlers: ->\n    #.......................................................................................................\n    @_watcher.on 'add',       ( ( path, stats   ) => @on_add            path  ) if @on_add?\n    @_watcher.on 'change',    ( ( path, stats   ) => @on_change         path  ) if @on_change?\n    @_watcher.on 'unlink',    ( ( path          ) => @on_unlink         path  ) if @on_unlink?\n    @_watcher.on 'addDir',    ( ( path          ) => @on_add_folder     path  ) if @on_add_folder?\n    @_watcher.on 'unlinkDir', ( ( path          ) => @on_unlink_folder  path  ) if @on_unlink_folder?\n    #.......................................................................................................\n    @_watcher.on 'ready',     ( => @on_ready()                                ) if @on_ready?\n    @_watcher.on 'raw',       ( ( key, path, d  ) => @on_raw key, path, d     ) if @on_raw?\n    @_watcher.on 'error',     ( ( error         ) => @on_error error          ) if @on_error?\n    #.......................................................................................................\n    if @on_all?\n      @_watcher.on 'all', ( key, path ) =>\n        key = 'add_folder'    if key is 'addDir'\n        key = 'unlink_folder' if key is 'unlinkDir'\n        @on_all key, path\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  on_error: ( path ) -> throw error\n    ###\n    watcher.on 'error', ( error ) ->\n      debug '^guy.watch@2^', 'error', error.message\n      for k, v of error\n        key = k + ': '\n        debug ( CND.reverse key.padEnd 25 ), ( CND.yellow rpr v )\n      if error.message.startsWith \"Couldn't initialize inotify\"\n        reject error.message\n        defer -> process.exit 1\n      debug CND.reverse \"error #{rpr error.message} occurred for path: #{CND.yellow rpr path}\"\n    ###\n\n  #---------------------------------------------------------------------------------------------------------\n  add_path: ( path, P... ) ->\n    @_watcher.add path, P...\n    return null\n\n\n#===========================================================================================================\nclass @Reporting_watcher extends @Watcher\n  on_add:           ( path      ) -> debug '^guy.watch@3^ add           ', { path, }\n  on_change:        ( path      ) -> debug '^guy.watch@4^ change        ', { path, }\n  on_unlink:        ( path      ) -> debug '^guy.watch@5^ unlink        ', { path, }\n  on_add_folder:    ( path      ) -> debug '^guy.watch@6^ add_folder    ', { path, }\n  on_unlink_folder: ( path      ) -> debug '^guy.watch@7^ unlink_folder ', { path, }\n  on_ready:                       -> debug '^guy.watch@8^ ready         '\n  # on_all:           ( key, path ) -> debug '^guy.watch@3^ all           ', { key, path, }\n  # on_raw:           ( P... ) -> debug '^guy.watch@9^ raw           ', P\n  # on_error:         ( error     ) -> debug '^guy.watch@10^ error         ', rpr error\n"
  ]
}